1. Two Sum
Easy

38366

1228

Add to List

Share
Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.

You may assume that each input would have exactly one solution, and you may not use the same element twice.

You can return the answer in any order.

 

Example 1:

Input: nums = [2,7,11,15], target = 9
Output: [0,1]
Explanation: Because nums[0] + nums[1] == 9, we return [0, 1].
Example 2:

Input: nums = [3,2,4], target = 6
Output: [1,2]
Example 3:

Input: nums = [3,3], target = 6
Output: [0,1]
 

Constraints:

2 <= nums.length <= 104
-109 <= nums[i] <= 109
-109 <= target <= 109
Only one valid answer exists.
 

Follow-up: Can you come up with an algorithm that is less than O(n2) time complexity?
Accepted
7,912,709
Submissions
16,129,754
Seen this question in a real interview before?

Yes

No

Problems

Pick One

Prev
1/2430

Next

Autocomplete





1
class Solution {
2
public:
3
    vector<int> twoSum(vector<int>& nums, int target) {
4
         int n=nums.size();
5
        for (int i=0; i<n; i++){
6
            for(int j=i+1; j<n; j++){
7
                if(nums[i]+nums[j]==target){
8
                    return{i,j};
9
                }
10
            }
11
        }
12
         
13
            
14
        return{-1,-1};
15
        
16
    }
17
};
